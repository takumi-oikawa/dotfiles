[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_event = 'BufRead'
hook_add = '''
    autocmd initvim FileType denite call s:denite_my_settings()
    function! s:denite_my_settings() abort
        nnoremap <silent><buffer><expr> <CR>
        \ denite#do_map('do_action')
        nnoremap <silent><buffer><expr> d
        \ denite#do_map('do_action', 'delete')
        nnoremap <silent><buffer><expr> p
        \ denite#do_map('do_action', 'preview')
        nnoremap <silent><buffer><expr> q
        \ denite#do_map('quit')
        nnoremap <silent><buffer><expr> i
        \ denite#do_map('open_filter_buffer')
        nnoremap <silent><buffer><expr> <Space>
        \ denite#do_map('toggle_select').'j'
    endfunction
"    noremap <Leader>f :Denite file<CR>
    noremap <Leader>s :Denite file/rec<CR>
    noremap <Leader>b :Denite buffer<CR>
    noremap <Leader>g :Denite grep<CR>
'''
hook_post_source = '''
    " denite file/rec
    let s:ignore_globs = ['.git', '.svn', 'node_modules']
    call denite#custom#var('file/rec', 'command', [
          \ 'ag',
          \ '--follow',
          \ ] + map(deepcopy(s:ignore_globs), { k, v -> '--ignore=' . v }) + [
          \ '--nocolor',
          \ '--nogroup',
          \ '-g',
          \ ''
          \ ])
    call denite#custom#source('file/rec', 'matchers', ['matcher/substring'])
    call denite#custom#filter('matcher/ignore_globs', 'ignore_globs', s:ignore_globs)

    " denite grep
    call denite#custom#var('grep', 'command', ['ag'])
    call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'final_opts', [])
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
depends = ['defx-icons']
hook_add = '''
nnoremap <silent> <leader>f :<C-u>Defx -listed -resume -buffer-name=tab`tabpagenr()`<CR>
'''
hook_source = '''
call defx#custom#column('filename', {
  \ 'directory_icon': '',
  \ 'opened_icon': '',
  \ })
call defx#custom#option('_', {
  \ 'columns': 'indent:git:icons:filename',
  \ 'show_ignored_files': 1,
  \ })
'''
[plugins.ftplugin]
defx = '''
  autocmd FileType defx call s:defx_my_settings()
  function! s:defx_my_settings() abort
  " Define mappings
  nnoremap <silent><buffer><expr> <CR>
  \ defx#do_action('open')
  nnoremap <silent><buffer><expr> c
  \ defx#do_action('copy')
  nnoremap <silent><buffer><expr> m
  \ defx#do_action('move')
  nnoremap <silent><buffer><expr> p
  \ defx#do_action('paste')
  nnoremap <silent><buffer><expr> l
  \ defx#do_action('open')
  nnoremap <silent><buffer><expr> E
  \ defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> P
  \ defx#do_action('open', 'pedit')
  nnoremap <silent><buffer><expr> o
  \ defx#do_action('open_or_close_tree')
  nnoremap <silent><buffer><expr> K
  \ defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> N
  \ defx#do_action('new_file')
  nnoremap <silent><buffer><expr> M
  \ defx#do_action('new_multiple_files')
  nnoremap <silent><buffer><expr> C
  \ defx#do_action('toggle_columns',
      \                'mark:indent:icon:filename:type:size:time')
  nnoremap <silent><buffer><expr> S
  \ defx#do_action('toggle_sort', 'time')
  nnoremap <silent><buffer><expr> r
  \ defx#do_action('rename')
  nnoremap <silent><buffer><expr> !
  \ defx#do_action('execute_command')
  nnoremap <silent><buffer><expr> x
  \ defx#do_action('execute_system')
  nnoremap <silent><buffer><expr> yy
  \ defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> .
  \ defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> ;
  \ defx#do_action('repeat')
  nnoremap <silent><buffer><expr> h
  \ defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> ~
  \ defx#do_action('cd')
  nnoremap <silent><buffer><expr> q
  \ defx#do_action('quit')
  nnoremap <silent><buffer><expr> <Space>
  \ defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> *
  \ defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> j
  \ line('.') == line('$') ? 'gg' : 'j'
  nnoremap <silent><buffer><expr> k
  \ line('.') == 1 ? 'G' : 'k'
  nnoremap <silent><buffer><expr> <C-l>
  \ defx#do_action('redraw')
  nnoremap <silent><buffer><expr> <C-g>
  \ defx#do_action('print')
  nnoremap <silent><buffer><expr> cd
  \ defx#do_action('change_vim_cwd')
  endfunction
'''

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

